#### FONTEND PART ####

1.	Put html files inside of resources/templates folder so that Spring Boot can read them
2.	Syntax: "th:...": are thymeleaf syntax.
3.	th:fragment="common-header": define template part using thymeleaf -> then call this template using: th:replace="common/header :: common-header"



#### BACKEND PART ####

* JPA/Hibernate
1.	JPA/Hibernate configurations will be put in resources/application.properties files
2.	Dao folder: deals with persistence operations (JPA operations) from the persistence layer
3.	Service folder: deals with any external services, except the services from the persistence layer 

* Spring Security:
1.	Secure the Login using Spring Security: com.userFront.config.SecurityConfig.java
2.  SALT in Spring Security is used to encode/encrypt password before storing to the database
3.  Role defined: Admin & User
4.  In the HomeController -> /signup service: instead of saving the new creating user to the database by using the CrudRepository save(user) method, spring security must be taken into account to encrypt the password and then save to the database -> creating new method: create(user) for this purpose!!!! 